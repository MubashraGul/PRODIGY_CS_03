import re

def check_password_strength(password):
    # Minimum length required for a strong password
    min_length = 8

    # Regular expressions to check for uppercase, lowercase, and digits
    has_uppercase = bool(re.search(r'[A-Z]', password))
    has_lowercase = bool(re.search(r'[a-z]', password))
    has_digit = bool(re.search(r'\d', password))

    # Check the length of the password
    length = len(password)

    # Initialize strength score
    strength_score = 0

    # Check if the password meets the minimum length requirement
    if length >= min_length:
        strength_score += 1

    # Check if the password has uppercase, lowercase, and digits
    if has_uppercase:
        strength_score += 1
    if has_lowercase:
        strength_score += 1
    if has_digit:
        strength_score += 1

    # Provide feedback based on the strength score
    if strength_score == 4:
        return "Strong password!"
    elif strength_score >= 2:
        return "Moderate password. Consider adding more complexity."
    else:
        return "Weak password. Please choose a stronger one."

# Example usage
password = input("Enter your password: ")
strength_feedback = check_password_strength(password)
print(strength_feedback)
